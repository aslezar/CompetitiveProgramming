#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define el <<'\n' 
const unsigned int mod = 1e9+7;
const int maxn = 1e5 + 4;

int main()
{
	ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(0);
	ll t=0; cin>>t;
	while(t--)
	{
		ll n=0; cin>>n;
		ll ans=0;

		cout<<ans el;

	}
	return 0;
}

#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
#include<map>
using namespace std;
#define ll long long int
const unsigned int mod = 1e9+7;

int main(){

    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    //this is fast I/O (inputput output) use header file <cstdio>
    ll t; cin>>t;
    while(t--){
        ll n; cin>>n;
        vector<ll>a(n);
        for(int i=0; i<n; i++) cin>>a[i];
        ll first = 0, last = n-1, ans =0;
        while(first<=last){
            if(a[first]==a[last]) first++, last--;
            else if(a[first]>a[last])
                a[first]-= a[last], last--, ans++;
            else 
                a[last]-=a[first], first++, ans++;
        }
        cout<<ans<<endl;
    }
    return 0;
}




for fast int read

void fastscan(int &number)
{
    //variable to indicate sign of input number
    bool negative = false;
    register int c;
  
    number = 0;
  
    // extract current character from buffer
    c = getchar();
    if (c=='-')
    {
        // number is negative
        negative = true;
  
        // extract the next character from the buffer
        c = getchar();
    }
  
    // Keep on extracting characters if they are integers
    // i.e ASCII Value lies from '0'(48) to '9' (57)
    for (; (c>47 && c<58); c=getchar())
        number = number *10 + c - 48;
  
    // if scanned input has a negative sign, negate the
    // value of the input number
    if (negative)
        number *= -1;
}
//edited
